name: Build Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-electron:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x]
        python-version: ['3.9']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Node dependencies
        run: npm ci

      - name: Install Python dependencies
        run: |
          cd flask-backend
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build Python backend with PyInstaller
        run: |
          cd flask-backend
          pyinstaller app.spec

      - name: Verify Python build output
        run: |
          ls -la flask-backend/dist
        shell: bash

      - name: Fix Windows executable path (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          sed -i 's/"app")/"app.exe")/g' forge.config.ts
        shell: bash

      - name: Create copy for Windows
        if: matrix.os == 'windows-latest'
        run: |
          copy flask-backend\dist\app.exe flask-backend\dist\app
        shell: cmd

      - name: Build Electron app
        run: npm run make

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: |
            out/make/**/*